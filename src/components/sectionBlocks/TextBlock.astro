---
import { PortableText } from "astro-portabletext";

const { title, textItems } = Astro.props;
---

<div class="text-block">
  {title && <h2 class="text-block-title">{title}</h2>}
  <!-- Render title if available -->
  <div class={`columns columns-${textItems.length}`}>
    {
      textItems.map((textItem: any) => (
        <div class="column">
          <PortableText value={textItem.column} />
        </div>
      ))
    }
  </div>
</div>

<style>
  .text-block {
    padding: var(--space-3xl) 0;
  }

  .text-block-title {
    font-size: var(--fontsize-4);
    font-weight: 400;
    line-height: 112.5%;
    margin-bottom: var(--space-xl);
  }

  .columns {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: var(--gap-default);
  }

  .column {
    display: flex;
    flex-direction: column;

    line-height: 133%;
  }

  .column:first-child p:first-child {
    font-size: var(--fontsize-2);
    line-height: 112.5%;
    color: red;
    margin-bottom: var(--space-m);
  }

  .column p {
    font-size: var(--fontsize--1);
  }

  :global(.column:first-child p:first-child) {
    /* color: red; */
    font-weight: 600;
  }
</style>
