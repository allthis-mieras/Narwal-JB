---
import Layout from "../layouts/Layout.astro";
import { Image } from "astro:assets";

import TextBlock from "../components/sectionBlocks/TextBlock.astro";
import ImageBlock from "../components/sectionBlocks/ImageBlock.astro";
import QuoteBlock from "../components/sectionBlocks/QuoteBlock.astro";

import { getAboutPage } from "../utils/sanity";
import { PortableText } from "astro-portabletext";
import { urlFor } from "../utils/image";
// import { getImage, Image } from "astro:assets";

const page: {
  title?: string;
  heroImage?: any;
  pageText?: any;
  content: any[];
} = await getAboutPage();

const imageUrl = urlFor(page.heroImage).url();

console.log("About page:", imageUrl);
---

<Layout title={page.title ?? ""}>
  <div class="container stretch">
    <section>
      <div class="page__title">
        <h1>{page.title}</h1>
      </div>
      <div class="page__hero">
        <div class="page__content">
          <div class="page__text">
            <PortableText value={page.pageText} />
          </div>
        </div>
        {
          page.heroImage && (
            <div class="page__cover">
              <Image
                src={imageUrl}
                widths={[480, 960, 1440, 1920, 2560]}
                inferSize
                sizes="(max-width: 360px) 240px, (max-width: 720px) 540px, (max-width: 1080px) 720px, 1080px"
                alt="Image"
                class="page__cover"
              />
            </div>
          )
        }
      </div>

      <div class="page__content">
        {
          page.content.map((block) => (
            <>
              {block._type === "textBlock" && (
                <TextBlock title={block.title} textItems={block.textItems} />
              )}
              {block._type === "quoteBlock" && (
                <QuoteBlock quote={block.quote} />
              )}
              {block._type === "imageBlock" && (
                <ImageBlock image={block.image} />
              )}

              {/* Uncomment and add other blocks as you implement them */}
              {/* {block._type === "imageBlock" && <ImageBlock image={block.image} />}
         
          {block._type === "textImageBlock" && <TextImageBlock {...block} />}
          {block._type === "videoBlock" && <VideoBlock videoUrl={block.videoUrl} />} */}
            </>
          ))
        }
      </div>
    </section>
  </div>
</Layout>

<style>
  /* * {
    border: 1px solid red;
  } */

  .page__hero {
    width: 100%;
    display: grid;
    gap: var(--space-xl);
    grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
  }
  .page__content {
    order: 2;
  }

  .page__cover,
  .page__cover--none {
    width: 100%;
    height: auto;
    object-fit: cover;
    order: 1;
    aspect-ratio: 3 / 4;
  }

  .page__cover--none {
    background: var(--black);
  }

  .page__container {
    padding: 0 var(--space-3);
  }

  .page__text {
    p {
      font-size: var(--fontsize-1);
      line-height: 133%;
      margin-bottom: var(--space-xs);
    }

    & p:first-child {
      font-size: var(--fontsize-3);
      line-height: 112.5%;
      margin-bottom: var(--space-m);
    }

    & p:last-child {
      font-size: var(--fontsize-0);
      line-height: 133%;
    }
  }

  @media (min-width: 896px) {
    .page__container {
      width: 100%;
      margin: var(--space-1) 0 var(--space-4);
      display: grid;

      grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
    }

    .page__cover {
      order: 2;
    }

    .page__content {
      order: 1;
    }
  }
</style>
