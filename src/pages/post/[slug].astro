---
import Layout from "../../layouts/Layout.astro";

import type { InferGetStaticParamsType } from "astro";
import { Image } from "astro:assets";
import { PortableText } from "astro-portabletext";
import { formatDate } from "../../utils";
import { getPost, getPosts } from "../../utils/sanity";
import { urlFor } from "../../utils/image";

// import type { Image } from "@sanity/types";

export const prerender = true;

type Params = InferGetStaticParamsType<typeof getStaticPaths>;
const { slug } = Astro.params as Params;

export async function getStaticPaths() {
  const posts = await getPosts();
  return posts.map((post) => ({
    params: { slug: post.slug.current },
  }));
}

function extractDomain(url: string) {
  const urlObject = new URL(url);
  return urlObject.hostname;
}

const post = await getPost(slug);
const domain = post.url ? extractDomain(post.url) : "";

export interface ImageAsset {
  _type: "image";
  asset: {
    _ref: string;
    _type: "reference";
  };
}

const imageUrl = post.mainImage?.asset
  ? urlFor(post.mainImage.asset).url()
  : "";

console.log("post image:", post.mainImage);
---

<Layout title={post.title!}>
  <section class="container stretch page post">
    <div class="container">
      <p class="post__date">
        {formatDate(post._createdAt)}
      </p>
      <h1 class="post__title">{post.title}</h1>
      <p class="post__excerpt">{post.excerpt}</p>

      <div class="post__content">
        <PortableText value={post.body} />
      </div>
      {
        post.url && (
          <a href={post.url} class="card__url" target="_blank">
            {domain}
          </a>
        )
      }
    </div>

    {
      post.mainImage && (
        <Image
          src={imageUrl}
          widths={[240, 540, 720, 1080]}
          inferSize
          sizes="(max-width: 360px) 240px, (max-width: 720px) 540px, (max-width: 1080px) 720px, 1080px"
          alt="Cover image"
          class="post__cover"
        />
      )
    }
  </section>
</Layout>

<style>
  .post {
    width: 100%;
    margin: var(--space-1) 0 var(--space-4);
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
    gap: 1rem;
  }

  .post__cover,
  .post__cover--none {
    width: 100%;
    height: auto;
    object-fit: cover;
  }

  .post__cover--none {
    background: var(--black);
  }

  .post__content {
    font-family: var(--font-family-serif);
    font-weight: 400;
    font-size: var(--font-size-4);
    line-height: var(--line-height-5);
    letter-spacing: -0.02em;
    margin-top: var(--space-6);
  }

  .post__title {
    font-family: var(--font-family-sans);
    font-size: var(--font-size-7);
    line-height: var(--line-height-6);
    margin: var(--space-4) 0;
    font-weight: 800;
  }

  .post__excerpt {
    font-family: var(--font-family-serif);
    font-size: var(--font-size-5);
    line-height: var(--line-height-4);
    margin-top: 0;
    font-weight: 400;
  }

  .post__date {
    font-family: var(--font-family-sans);
    font-weight: 600;
    font-size: var(--font-size-1);
    line-height: var(--line-height-1);
    margin-top: var(--space-4);
  }

  @media (min-width: 800px) {
    .post__cover,
    .post__cover--none {
      width: 100%;
    }

    .post__title {
      font-size: var(--font-size-10);
      line-height: var(--line-height-10);
      margin: var(--space-6) 0 0;
      letter-spacing: -0.025em;
    }

    .post__excerpt {
      font-size: var(--font-size-5);
      line-height: var(--line-height-5);
      margin-top: var(--space-3);
      margin-bottom: var(--space-3);
    }

    .post__date {
      font-size: var(--font-size-3);
      line-height: var(--line-height-2);
      margin-top: var(--space-0);
    }

    .post__content {
      margin-top: var(--space-7);
    }
  }
</style>
